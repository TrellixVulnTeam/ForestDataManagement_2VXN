{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, authenticationService) {\n      this.router = router;\n      this.authenticationService = authenticationService;\n    }\n\n    canActivate(route, state) {\n      const user = this.authenticationService.userValue;\n\n      if (user) {\n        // check if route is restricted by role\n        if (route.data.roles && route.data.roles.indexOf(user.role) === -1) {\n          // role not authorised so redirect to home page\n          this.router.navigate(['/']);\n          return false;\n        } // authorised so return true\n\n\n        return true;\n      } // not logged in so redirect to login page with the return url\n\n\n      this.router.navigate(['/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return false;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthenticationService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}